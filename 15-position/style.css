/* 
  Position

  Es al propiedad que nos permite posicionar los elementos del html.

  Conceptos importantes:
  
    1. Flujo de renderizado: los elementos en html se dubujan de derecha a izquierda y de arriba a abajo.
    
    2.Espacio reservado: es eñ espacio que tiene un elemento asignado en el navegador.

    3. Elemento posicionado; es cuando su propiedad "position" tiene un valor distinto a "static", que es el valor por default

    4.Stacking context: Contexto de apilamiento. es el orden en el que se superpone o apilan los elementos en html
    
  Al pósicionar un elemento se habilitan 5 propiedades que podemos usar para mover el elemeto en 3 ejes. (X, Y, Z)

    Top     ->Movera el elemento desde la parte superior
    rigth   ->Movera el elemento desde la parte derecha
    bottom  ->Movera el elemento desde la parte ingrtior
    left    ->Movera el elemento desde la part izquierda

  *Los elementos tienen su punto de origen (0,0) en la esquina superior izquierda.
  *La distancia a moverse se indica en px y acepta valores negativos.
  *Si aun elemento le declaramos la propiedad top, buttom deja de funcionar.
  *Si aun elemento le declaramos la propiedad left, rigth deja de funcionar.

    Z-index -> nos permite mover el elemento en el contexto de apilamiento. (Eje Z). Recibe valores en numero o indices, sin unidad. Puede recibir valores  negativos.

Los posibles valores que "Position" recive son:

  Static    -> es el valor por default de los elementos con este valor el elemento NO ESTA POCISIONADO y no podemos moverlo.

  relative  -> Mantiene su posicion y medidas en el flijo de renderizado.Mantiene su espacio recervado. si lo movemos usara su contenedor como referencia.

  absolute  -> el elemento perdera sus medidas y su aspecto reservado. si movemos el elemento lo hara en funcion de su centenedor posicionado y su bni tiene algunon lo hara eb funcion del elemento hrml.
  fixed     -> el elemento perdera us medidas y su espacio reservcado, si los movemos usara el elemento html como referencia y quedara  fijo en  esa posicion anque hagamos escroll
  sticky    -> es una mescla de reñative y fixed con este valor no sirven para mover el elemento si no para indicarle en que ounto pasara a tener un comportamiento similar a fixed.


*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: sans-serif;
  color: rgb(240, 128, 163);
  background-color: rgb(48, 98, 98);
}

.container {
  margin: 0 auto;
  width: 300px;
  height: 300px;
  background-color: mediumpurple;
}

.box {
  width: 100px;
  height: 100px;
}

.box-1 {
  position: relative;
  /* top: -20px;
  left: -20px; */
  right: -20px;
  bottom: -20px;
  z-index: 20;
  background-color: rgb(197, 187, 243);
}

.box-2 {
  position: relative;
  left: 50px;
  top: -25px;
  z-index: 10;
  background-color: lightcoral;
}

.box-3 {
  z-index: 15;
  position: absolute;
  top: 100px;
  right: 0;
  bottom: 0;
  left: 200px;
  background-color: lightskyblue;
}

.box-4 {
  z-index: 40;
  position: absolute;
  bottom: 0;
  right: 0;
  width: 100%;
  background-color: rgb(216, 207, 112);
}

nav {
  position: fixed;
  top: 0;
  left: 0;

  width: 100%;
  height: 50px;
  text-align: center;
  background-color: cornsilk;
}

nav a{
  font-size: 18px;
  display: inline-block;
  padding: 12px 8px;
  text-decoration: none;
  color: rgb(77, 119, 77);
}

nav a:hover {
  text-decoration: underline;
}

.button {
  z-index: 20;
  position: fixed;
  right: 20px;
  bottom: 20px;
  width: 100px;
  height: 100px;
  font-size: 48px;
  text-align: center;
  padding: 10px;
  border-radius: 50%;
  background-color: rgb(126, 25, 185);
  cursor: pointer;
}

.button:hover {
  background-color: rgb(12, 88, 186);
}

main {
  width: 100%;
  max-width: 900px;
  margin: 0 auto;
  margin-top: 50px;
  background-color: rgb(8, 30, 52);
}

main section {
  padding: 0 24px;
}

section h2 {
  z-index: 10;
  position: sticky;
  top: 50px;
  font-size: 34px;
  background-color: rgb(6, 85, 72);
}

section p {
  font-size: 24px;
  line-height: 1.5;
  margin-bottom: 24px;
}